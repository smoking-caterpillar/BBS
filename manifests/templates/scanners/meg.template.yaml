apiVersion: v1
kind: ConfigMap
metadata:
  name: meg-configmap
data:     
  custom.paths.txt: |-
    /.babelrc
    /.bash_history
    /.bashrc
    /build.xml
    /circle.yml
    /composer.json
    /composer.lock
    /CVS/Entries
    /CVS/Root
    /Dockerfile
    /.dockerignore
    /.editorconfig
    /.git/config
    /.git/HEAD
    /.gitignore
    /gruntfile.coffee
    /Gruntfile.coffee
    /gruntfile.js
    /Gruntfile.js
    /Gulpfile
    /gulpfile.js
    /Gulpfile.js
    /.hg
    /.htaccess
    /.htpasswd
    /Jenkinsfile
    /.jestrc
    /license
    /LICENSE
    /license.md
    /LICENSE.md
    /license.txt
    /LICENSE.txt
    /Makefile
    /mkdocs.yml
    /npm-debug.log
    /.npmignore
    /npm-shrinkwrap.json
    /package.json
    /phpinfo.php
    /php.php
    /phptest.php
    /phpunit.xml
    /.profile
    /readme
    /README
    /readme.html
    /README.html
    /readme.md
    /README.md
    /readme.mkd
    /README.mkd
    /readme.txt
    /README.txt
    /robots.txt
    /.svn/entries
    /.swp
    /tags
    /test.php
    /Thumbs.db
    /.travis.yml
    /tsconfig.json
    /webpack.config.js
    /yarn-debug.log
    /yarn-error.log
    /yarn.lock
    /environment.js
    
---
apiVersion: v1
kind: Job
metadata:
  name: meg-BBS_PROJECT_CODE
  labels:
    app: meg-BBS_PROJECT_CODE
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      labels:
        app: meg-BBS_PROJECT_CODE
    spec:
      volumes:
      - name: data-volume
        hostPath: 
          path: /mnt/volume_lon1_01
          type: Directory
      - name: configmap-volume
        configMap:
          name: meg-configmap 
      containers:
      - name: meg-BBS_PROJECT_CODE
        image: smokingcaterpillar/bbs-osintel-gau-subs
        volumeMounts:
        - name: data-volume
          mountPath: /optdata
        - name: configmap-volume
          mountPath: /wordlists
        command: 
        - /bin/bash
        - -c
        - |
          echo meg v1
          echo Code: BBS_PROJECT_CODE
          echo Id: BBS_PROJECT_ID
          echo List: BBS_PROJECT_LIST
          
          ## BBRF SETUP ##
          echo setting up BBRF...
          cp /optdata/BBS/output/private/bbrs-config.json /root/.bbrf/config.json
          bbrf use BBS_PROJECT_CODE
          ## BBRF SETUP ##
          
          
          cd /optdata/BBS
          
          
          mkdir -p output/project-data/BBS_PROJECT_CODE/data/scanner/meg/
          cd output/project-data/BBS_PROJECT_CODE/data/scanner/meg/
          
          echo Installing meg...
          go get -u github.com/tomnomnom/meg
          
          meg --verbose /wordlists/custom.paths.txt /optdata/BBS/output/project-data/BBS_PROJECT_CODE/BBS_PROJECT_LIST 
          
          
                    
          echo all done
      restartPolicy: Never

